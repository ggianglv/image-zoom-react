{"version":3,"sources":["dist/ReactZoom.js","App.js","serviceWorker.js","index.js"],"names":["ON_TYPES","preventBehavior","e","cancelable","preventDefault","ReactZoom","props","src","zoomSrc","duration","magnify","on","onImageLoaded","onZoomIn","onZoomOut","alt","touch","_useState","useState","left","top","_useState2","_slicedToArray","data","setData","_useState3","_useState4","isZoom","setIsZoom","imageRef","useRef","useEffect","current","useLayoutEffect","image","document","createElement","onload","_objectSpread","width","clientWidth","height","clientHeight","zoom","pos","isTouch","arguments","length","undefined","rect","target","getBoundingClientRect","clientX","targetTouches","clientY","x","y","Math","max","getPos","originWidth","originHeight","concat","React","className","style","cursor","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","onTouchStart","window","addEventListener","passive","onTouchMove","onTouchEnd","removeEventListener","ref","transition","opacity","defaultProps","memo","Wrapper","styled","div","_templateObject","Options","_templateObject2","Option","_templateObject3","CustomLabel","_templateObject4","CustomSelect","select","_templateObject5","App","Object","slicedToArray","setOn","setMagnify","react_default","a","dist_ReactZoom","key","onChange","value","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b077da32.chunk.js","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useLayoutEffect, useRef, memo, useEffect } from 'react';\nimport './zoom.css';\nvar ON_TYPES = {\n  mouseover: 'mouseover',\n  grab: 'grab'\n};\n\nvar preventBehavior = function preventBehavior(e) {\n  if (e.cancelable) {\n    e.preventDefault();\n  }\n};\n\nvar ReactZoom = function ReactZoom(props) {\n  var src = props.src,\n      zoomSrc = props.zoomSrc,\n      duration = props.duration,\n      magnify = props.magnify,\n      on = props.on,\n      onImageLoaded = props.onImageLoaded,\n      onZoomIn = props.onZoomIn,\n      onZoomOut = props.onZoomOut,\n      alt = props.alt,\n      touch = props.touch;\n\n  var _useState = useState({\n    left: 0,\n    top: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isZoom = _useState4[0],\n      setIsZoom = _useState4[1];\n\n  var imageRef = useRef(null);\n  useEffect(function () {\n    if (isZoom) {\n      onZoomIn(imageRef.current);\n    } else {\n      onZoomOut(imageRef.current);\n    }\n  }, [isZoom]);\n  useLayoutEffect(function () {\n    var image = document.createElement('img');\n\n    image.onload = function () {\n      setData(_objectSpread({}, data, {\n        width: imageRef.current.clientWidth * magnify,\n        height: imageRef.current.clientHeight * magnify\n      }));\n      onImageLoaded(imageRef.current);\n    };\n\n    image.src = src;\n  }, []);\n\n  var getPos = function getPos(e) {\n    var isTouch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var rect = e.target.getBoundingClientRect();\n    var clientX = isTouch ? e.targetTouches[0].clientX : e.clientX;\n    var clientY = isTouch ? e.targetTouches[0].clientY : e.clientY;\n    var x = clientX - rect.left;\n    var y = clientY - rect.top;\n    x = Math.max(0, x);\n    y = Math.max(0, y);\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  var zoom = function zoom(e) {\n    var isTouch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var pos = getPos(e, isTouch);\n    var originWidth = data.width / magnify;\n    var originHeight = data.height / magnify;\n    var left = pos.x / originWidth * (originWidth - data.width);\n    var top = pos.y / originHeight * (originHeight - data.height);\n    setData(_objectSpread({}, data, {\n      left: \"\".concat(left, \"px\"),\n      top: \"\".concat(top, \"px\")\n    }));\n  };\n\n  var onMouseMove = function onMouseMove(e) {\n    if (!isZoom) {\n      return;\n    }\n\n    zoom(e);\n  };\n\n  var onMouseEnter = function onMouseEnter() {\n    if (on === ON_TYPES.mouseover) {\n      setIsZoom(true);\n    }\n  };\n\n  var onMouseLeave = function onMouseLeave() {\n    setIsZoom(false);\n  };\n\n  var onMouseDown = function onMouseDown(e) {\n    if (on === ON_TYPES.grab) {\n      setIsZoom(true);\n      zoom(e);\n    }\n  };\n\n  var onMouseUp = function onMouseUp() {\n    if (on === ON_TYPES.grab) {\n      setIsZoom(false);\n    }\n  };\n\n  var onTouchStart = function onTouchStart(e) {\n    if (!touch) {\n      return;\n    }\n\n    window.addEventListener('touchmove', preventBehavior, {\n      passive: false\n    });\n    setIsZoom(true);\n    zoom(e, true);\n  };\n\n  var onTouchMove = function onTouchMove(e) {\n    if (!touch) {\n      return;\n    }\n\n    zoom(e, true);\n  };\n\n  var onTouchEnd = function onTouchEnd() {\n    if (!touch) {\n      return;\n    }\n\n    window.removeEventListener('touchmove', preventBehavior);\n    setIsZoom(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"react-zoom-wrapper\",\n    style: {\n      cursor: on === ON_TYPES.grab && isZoom ? 'grab' : 'default'\n    },\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onMouseMove: onMouseMove,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }, React.createElement(\"img\", {\n    ref: imageRef,\n    alt: alt,\n    className: \"react-zoom-origin-image\",\n    src: src\n  }), !!data.width && React.createElement(\"img\", {\n    className: \"react-zoom-image\",\n    style: {\n      width: \"\".concat(data.width, \"px\"),\n      height: \"\".concat(data.height, \"px\"),\n      left: data.left,\n      top: data.top,\n      transition: \"opacity \".concat(duration, \"ms ease-in-out\"),\n      opacity: +isZoom\n    },\n    alt: alt,\n    src: zoomSrc || src\n  }));\n};\n\nReactZoom.defaultProps = {\n  zoomSrc: '',\n  touch: true,\n  alt: 'zoom',\n  on: ON_TYPES.mouseover,\n  magnify: 2,\n  duration: 200,\n  onImageLoaded: function onImageLoaded() {},\n  onZoomIn: function onZoomIn() {},\n  onZoomOut: function onZoomOut() {}\n};\nexport default memo(ReactZoom);","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport ReactZoom from './dist/ReactZoom'\nimport './App.css'\n\nconst Wrapper = styled.div`\n  width: 500px;\n  margin: 0 auto;\n`\n\nconst Options = styled.div`\n  display: flex;\n  margin-top: 10px;\n`\nconst Option = styled.div`\n  display: flex;\n  font-size: 14px;\n  margin-right: 10px;\n`\n\nconst CustomLabel = styled.div`\n  margin-right: 4px;\n`\n\nconst CustomSelect = styled.select`\n  \n`\n\nconst App = () => {\n  const [on, setOn] = useState('mouseover')\n  const [magnify, setMagnify] = useState(1.5)\n\n  const onOnChange = (e) => {\n    setOn(e.target.value)\n  }\n\n  const onMagnifyChange = (e) => {\n    setMagnify(+e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <ReactZoom\n          key={magnify} // trigger remount when change magnify\n          on={on}\n          magnify={magnify}\n          src='http://www.jacklmoore.com/img/daisy.jpg'\n        />\n\n        <Options>\n          <Option>\n            <CustomLabel>\n              on\n            </CustomLabel>\n            <CustomSelect onChange={onOnChange} value={on}>\n              <option value=\"mouseover\">mouseover</option>\n              <option value=\"grab\">grab</option>\n            </CustomSelect>\n          </Option>\n\n          <Option>\n            <CustomLabel>\n              magnify\n            </CustomLabel>\n            <CustomSelect onChange={onMagnifyChange} value={magnify}>\n              <option value=\"1.5\">1.5</option>\n              <option value=\"2\">2</option>\n              <option value=\"2.5\">2.5</option>\n              <option value=\"3\">3</option>\n            </CustomSelect>\n          </Option>\n        </Options>\n      </Wrapper>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}